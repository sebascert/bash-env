##==============================================================================
## COLORS
##
## Control the color and format scheme of the bash prompt.
## The prompt is divided into segments, listed below starting from the left:
## -  USER: shows the user's name.
## -  HOST: shows the host's name.
## -   PWD: shows the current directory.
## -   GIT: if inside a git repository, shows the name of current branch.
## - INPUT: actual bash input.
##
## Valid color options:
## - white black light-gray dark-gray
##   red green yellow blue cyan purple
##   light-red light-green light-yellow light-blue light-cyan light-purple
## - Values in the range [0-255] for 256 bit colors. To check all number-color
##   pairs for your terminal, you may run the following snippet by HaleTom:
##     curl -s https://gist.githubusercontent.com/HaleTom/89ffe32783f89f403bba96bd7bcd1263/raw/ | bash
##   or search something like "bash 256 color codes" on the internet.
##
##==============================================================================

font_color_user="white"
background_user="blue"
texteffect_user="bold"

font_color_host="white"
background_host="light-blue"
texteffect_host="bold"

font_color_pwd="white"
background_pwd="none"
texteffect_pwd="bold"

font_color_git="white"
background_git="none"
texteffect_git="bold"

font_color_pyenv="blue"
background_pyenv="none"
texteffect_pyenv="bold"

font_color_input="cyan"
background_input="none"
texteffect_input="bold"


##==============================================================================
## MAIN FORMAT
##==============================================================================
format="PWD GIT PYENV"

separator_char='>'                # Separation character, '\uE0B0'=triangle
separator_padding_left=''         # Add char or string to the left of the separator
separator_padding_right=''        # Add char or string to the right of the separator
segment_padding=' '               # Add char or string around segment text
enable_vertical_padding=true      # Add extra new line over prompt
enable_command_on_new_line=true   # Add new line between prompt and command

max_pwd_char="60"


##==============================================================================
## GIT
##==============================================================================
show_git=true			# Enable/Disable git info if inside a repo
git_symbol_synced=''
git_symbol_unpushed='△'
git_symbol_unpulled='▽'
git_symbol_unpushedunpulled='○'
git_symbol_dirty='!'
git_symbol_dirty_unpushed='▲'
git_symbol_dirty_unpulled='▼'
git_symbol_dirty_unpushedunpulled='●'

